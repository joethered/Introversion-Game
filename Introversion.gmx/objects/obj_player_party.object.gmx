<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_player_party</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spt_player_party</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hasCollided = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var group1Depth;
var group1y = -100;
var group1 = false;
with(obj_party_group1)
{
    group1Depth = depth;
    group1y = y;
}
if (group1y != -100) group1 =true;

if (keyboard_check_pressed(vk_right)){
    hspeed = 1.5
    image_speed = .2;
    image_xscale = 1;
    hasCollided = false;
    
}
if (hspeed &gt; 0 &amp;&amp; keyboard_check_released(vk_right)){
    hspeed = 0;
    if (vspeed == 0){
        image_speed = 0;
        image_index = 0;
    }
}

if (keyboard_check_pressed(vk_left)){
    hspeed = -1.5;
    image_speed = .2;
    image_xscale = -1;
    hasCollided = false;
}
if (hspeed &lt; 0 &amp;&amp; keyboard_check_released(vk_left)){
    hspeed = 0;
    if (vspeed == 0){
        image_speed = 0;
        image_index = 0;
    }
}



if (keyboard_check_pressed(vk_down)){
    vspeed = 1;
    image_speed = .2;
    hasCollided = false;
}

if (vspeed &gt; 0 &amp;&amp; keyboard_check_released(vk_down)){
    vspeed = 0;
    if (hspeed == 0){
        image_speed = 0;
        image_index = 0;
    }
}

if (keyboard_check_pressed(vk_up)){
    vspeed = -1;
    image_speed = .2;
    hasCollided = false;
}
if (vspeed &lt; 0 &amp;&amp; keyboard_check_released(vk_up)){
    vspeed = 0;
    if (hspeed == 0){
        image_speed = 0;
        image_index = 0;
    }
}

if(keyboard_check(vk_space) &amp;&amp; hasCollided)
{
    room_goto (rm_conversation);
}

if (group1){
    if (y &lt; group1y)
    { 
        depth= group1Depth +1
    }
    if (y &gt; group1y)
    { 
        depth= group1Depth -1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="jmp_living_to_entry">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_entry</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="jmp_entry_to_living">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_living</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_party_group1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_space))
{
    room_goto (rm_conversation);
}
hasCollided = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_living_collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(270)
    vspeed = 0;
}

if (vspeed &lt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(90)
    vspeed = 0;
}

if (hspeed != 0 &amp;&amp; !place_free(x + hspeed,y))
{ 
    if( hspeed &gt; 0)
        move_contact(0);
    else
        move_contact(180);   
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_entry_collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(270)
    vspeed = 0;
}

if (vspeed &lt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(90)
    vspeed = 0;
}

if (hspeed != 0 &amp;&amp; !place_free(x + hspeed,y))
{ 
    if( hspeed &gt; 0)
        move_contact(0);
    else
        move_contact(180);   
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>
