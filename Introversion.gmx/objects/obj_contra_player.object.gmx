<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_contra_shoot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity = 2;
jump = 0;
moving = false;
shooting = false;
facing = 1;
bulletCooldown = 5;
bulletReady = true;
bulletTimer = 0;
lookDirection = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index +=1;
if(jump == 0 &amp;&amp; keyboard_check_pressed(ord('C')) &amp;&amp; vspeed ==0)
{
    jump = 1;
    vspeed = -25;
}

if ( keyboard_check(vk_up) &amp;&amp; (keyboard_check(vk_right) || keyboard_check(vk_left)))
{
    lookDirection = 1;
    moving = true;
    if(keyboard_check(vk_right))
    {
        hspeed = 6;
        facing = 1;
    }
    else if(keyboard_check(vk_left))
    {
        hspeed = -6;
        facing = -1;
    }
}
else if ( keyboard_check(vk_down) &amp;&amp; (keyboard_check(vk_right) || keyboard_check(vk_left)))
{
    lookDirection = 3;
    moving = true;
    if(keyboard_check(vk_right))
    {
        hspeed = 6;
        facing = 1;
    }
    else if(keyboard_check(vk_left))
    {
        hspeed = -6;
        facing = -1;
    }
}
else if(keyboard_check(vk_up))
{
    lookDirection = 0;
    moving = false;
    crouching = false;
}
else if(keyboard_check(vk_right))
{
    facing = 1;
    lookDirection = 2;
    hspeed = 6;
    moving = true;
}
else if(keyboard_check(vk_left))
{
    facing = -1;
    lookDirection = 2;
    hspeed = -6;
    moving = true;
}

if( keyboard_check_released(vk_up))
{
    lookDirection = 2;
}

if( keyboard_check_released(vk_down))
{
    lookDirection = 2;
}

if( hspeed &gt; 0 &amp;&amp; keyboard_check_released(vk_right))
{
    hspeed = 0;   
    moving = false;
}

if( hspeed &lt; 0 &amp;&amp; keyboard_check_released(vk_left))
{
    hspeed = 0;   
    moving = false;
}

if(keyboard_check(ord('X')) &amp;&amp; bulletReady &amp;&amp; bulletTimer &lt;=0)
{
    bullet = instance_create(x + (22 * facing), y - 24, obj_bullet);
    if(lookDirection == 2){
        bullet.hspeed = 12 * facing;
        bullet.facing = facing;
    }
    else if (lookDirection = 0) {
        bullet.vspeed = -12;
        bullet.facing = facing;
    }
    else if (lookDirection = 1) {
        bullet.vspeed = -9;
        bullet.hspeed = 9 * facing;
        bullet.facing = facing;
    }
    else if (lookDirection = 3) {
        bullet.vspeed = 9;
        bullet.hspeed = 9 * facing;
        bullet.facing = facing;
    }
    bulletTimer = bulletCooldown;
    bulletReady = false;
    shooting = true;
}

if (keyboard_check_released(ord('X')))
{
    shooting = false;
}

if (bulletTimer &gt; 0)
{
    bulletTimer -= 1;
}
else
{
    bulletReady = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(270)
    vspeed = 0;
    jump = 0;
}

if (vspeed &lt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(90)
    vspeed = 0;
}

if (hspeed != 0 &amp;&amp; !place_free(x + hspeed,y))
{ 
    if( hspeed &gt; 0)
        move_contact(0);
    else
        move_contact(180);   
    hspeed = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lookDirection == 2 &amp;&amp; jump == 0 &amp;&amp; !moving )
{
    draw_sprite_ext(spt_contra_shoot,0,x,y,facing * -1,1,0,c_white,1);
}
else if (jump == 1)
{
   draw_sprite_ext(spt_contra_jumping,image_index,x,y,facing * -1,1,0,c_white,1); 
   image_speed = 0.8;
}
else if(lookDirection == 1 &amp;&amp; jump == 0 )
{
    draw_sprite_ext(spt_contra_Up_Diagonal,image_index,x,y,facing * -1,1,0,c_white,1);
    image_speed = 0.5;
}
else if(lookDirection == 0 &amp;&amp; jump == 0)
{
    draw_sprite_ext(spt_contra_up,image_index,x,y,facing * -1,1,0,c_white,1);
    if (shooting)
    {
        image_speed = 0.5;
    }
    else
    {
        image_speed = 0;
    }
}
else if(lookDirection == 3 &amp;&amp; jump == 0)
{
    draw_sprite_ext(spt_contra_down_diagonal,image_index,x,y,facing * -1,1,0,c_white,1);
    image_speed = 0.5;
}
else if(moving &amp;&amp; lookDirection == 2 )
{
    if(shooting)
    {
        draw_sprite_ext(spt_contra_shoot_and_run, image_index,x,y,facing * -1,1,0,c_white,1);
    }
    else
    {
        draw_sprite_ext(spt_contra_run, image_index,x,y,facing * -1,1,0,c_white,1);
    }
    image_speed = 0.5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
