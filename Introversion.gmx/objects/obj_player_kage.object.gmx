<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_player_kage_spin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>107</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_gravity</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>270</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.25</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = false;
spin = false;
spin_avail = true;
facing = 1;
invulnerable = false;
recentlyDamaged = false;
damaged = false;
demo_count = 0;
zoom_factor = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invulnerable</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spin_avail = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spin = false;
alarm[2] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damaged = false;
if ((hspeed &lt; 0 &amp;&amp; !(keyboard_check(vk_left))) || 
        (hspeed &gt; 0 &amp;&amp; !(keyboard_check(vk_right)))){
    hspeed = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_kage_controller.level == 2){
    if (zoom_factor &gt; 0.6)
        zoom_factor -= 0.05;
    if (zoom_factor == 0.6 &amp;&amp; keyboard_check_pressed(ord('C'))){
        star = instance_create(x,y,obj_throwing_star);
        star.hspeed = facing * 20;
    }
}
if (obj_kage_controller.level == 4){
    if (zoom_factor &lt; 0.75)
        zoom_factor += 0.05;
    if (zoom_factor == 0.75 &amp;&amp; keyboard_check_pressed(ord('X'))){
        vspeed = -12;
        jumping = true;
        obj_kage_controller.level = 5;
        obj_kage_controller.alarm[4] = 20;
    }
}
if (obj_kage_controller.level == 7){
    if (y &lt; 228){
        obj_kage_controller.level = 7;
        gravity = 0;
        vspeed = 0;
    }
    
}
if (obj_kage_controller.level == 7){
    if (keyboard_check_pressed(vk_up)){
        spin = true;
        alarm[1] = 10;
        spin_avail = false;
        audio_play_sound(sfx_spin_attack, true, 0);  
        obj_kage_controller.level = 8;
        obj_kage_controller.alarm[0] = 2;
        gravity = 0.25
    }
}

if (obj_kage_controller.level &gt;=8){
    if (zoom_factor &lt; 1)
        zoom_factor += 0.05;
    if(recentlyDamaged)
    {
        hspeed = facing*20;
        recentlyDamaged = false;
        audio_play_sound(sfx_player_hit, true,0);
    }else if (!damaged){
        
        if (spin_avail = true &amp;&amp; jumping == true &amp;&amp; keyboard_check_pressed(vk_up)){
            spin = true;
            alarm[1] = 10;
            spin_avail = false;
            audio_play_sound(sfx_spin_attack, true, 0);  
        }
        
        if(jumping == false &amp;&amp; keyboard_check_pressed(ord('X'))){
            jumping = true;
            vspeed = -12;    
        }
        
        if (jumping == true &amp;&amp; keyboard_check_pressed(vk_down)){
            vspeed = 15;
        }
        
        if (keyboard_check(vk_right)){
            facing = 1;
            hspeed = 10;
        }
        if (hspeed &gt; 0 &amp;&amp; keyboard_check_released(vk_right)){
            hspeed = 0;
        }
        
        if (keyboard_check(vk_left)){
            hspeed = -10;
            facing = -1;
        }
        if (hspeed &lt; 0 &amp;&amp; keyboard_check_released(vk_left)){
            hspeed = 0;
        }
        
        if (keyboard_check_pressed(ord('C'))){
            star = instance_create(x,y,obj_throwing_star);
            star.hspeed = facing * 20;
        }
    }
}

view_wview[0] = 320 * zoom_factor;
view_hview[0] = 256 * zoom_factor;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_branch_col">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(270)
    vspeed = 0;
    jumping = 0;
}

if (vspeed &lt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(90)
    vspeed = 0;
}

if (hspeed != 0 &amp;&amp; !place_free(x + hspeed,y))
{ 
    if( hspeed &gt; 0)
        move_contact(0);
    else
        move_contact(180);   
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ninja_kage">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>invulnerable</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>spin_avail</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>recentlyDamaged = true;
damaged = true;
invulnerable = true;


//effect_create_below(ef_cloud, x, y, 0.0000000000000000000000001, c_black);

effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(190, 190, 190));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(190, 190, 190));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(190, 190, 190));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(210, 210, 210));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(140, 140, 140));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(140, 140, 140));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));
effect_create_below(ef_flare, x + random(15), y+random(15), 0.1, make_color_rgb(255, 255, 255));


//screwing with paricle effects
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_ground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(270)
    vspeed = 0;
    jumping = 0;
}

if (vspeed &lt; 0 &amp;&amp; !place_free(x,y+vspeed))
{ 
    move_contact(90)
    vspeed = 0;
}

if (hspeed != 0 &amp;&amp; !place_free(x + hspeed,y))
{ 
    if( hspeed &gt; 0)
        move_contact(0);
    else
        move_contact(180);   
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 1;
if(invulnerable)
{
    if (image_index % 2 == 0)
        alpha = 1;
    else
        alpha = 0.5;
    
}
if(damaged)
{
    alpha = 0;
}



if (jumping){
    if (spin){
        draw_sprite_ext(spt_player_kage_spin,image_index,x,y,facing,1,0,c_white,alpha);
        image_speed = 1;
    }else{
        draw_sprite_ext(spt_player_kage_jump,0,x,y,facing,1,0,c_white,alpha);
    }
}else{
    if (hspeed != 0){
        draw_sprite_ext(spt_player_kage_run,image_index,x,y,facing,1,0,c_white,alpha);
        image_speed = 0.2;
    }else{
        draw_sprite_ext(spt_player_kage_idle,0,x,y,facing,1,0,c_white,alpha);
    }
}

if(obj_kage_controller.level = 2){
    image_speed = 0.2;
    draw_sprite_ext(spt_c_key,image_index,x,y-30,1,1,0,c_white,1);
    draw_sprite_ext(spt_throwing_star,image_index,x+demo_count,y,1,1,0,c_white,0.3)
    demo_count += 20;
    if (demo_count &gt; 120)
        demo_count = 0;
}

if(obj_kage_controller.level = 4){    
    draw_sprite_ext(spt_x_key,image_index,x,y-30,1,1,0,c_white,1);
    if (demo_count &gt; 0)
        draw_sprite_ext(spt_player_kage_jump,image_index,x,y+sqr(demo_count-8)-64,facing,1,0,c_white,0.3);  
    demo_count += 0.25;
    if (demo_count == 8)
        demo_count = 0;
    image_speed = 0.2;
}

if(obj_kage_controller.level = 7){
    image_speed = 1;
    
    draw_sprite_ext(spt_up_arrow_key,image_index,x,y-30,1,1,0,c_white,1);
    draw_sprite_ext(spt_player_kage_spin,image_index,x,y,1,1,0,c_white,0.3)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
