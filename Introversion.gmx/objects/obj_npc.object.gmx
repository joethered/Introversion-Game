<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_arthur_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spt_character_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facing = 1;
walking = false;
goal_x = 100;
goal_y = 100;
path = pth_empty;
set_loc = false;
path_pos = 0;
map = global.npc_map[0];
name = "hi";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (set_loc){
    name = ds_map_find_value(map,"name")
    if (walking){
        var tmp_id;
        switch (ds_map_find_value(map,"cur_room")){
        case "entry":
            if (ds_map_find_value(map,"next_room") == "dining"){
                with(jmp_entry_to_dining)
                    tmp_id = self;
            }else if (ds_map_find_value(map,"next_room") == "kitchen"){
                with(jmp_entry_to_kitchen)
                    tmp_id = self;
            }else{
                with(jmp_entry_to_living)
                    tmp_id = self;
            }
            break;
        case "living":
            if (ds_map_find_value(map,"next_room") == "entry"){
                //with(jmp_living_to_entry)
                //    tmp_id = self;
                goal_x = jmp_living_to_entry.x;
                goal_y = jmp_living_to_entry.y;
            }else{
                //with(jmp_livng_to_parlor)
                //   tmp_id = self;
                goal_x = jmp_livng_to_parlor.x;
                goal_y = jmp_livng_to_parlor.y;
            }
            break;
        case "parlor":
            if (ds_map_find_value(map,"next_room") == "kitchen"){
                with(jmp_parlor_to_kitchen)
                    tmp_id = self;
            }else{
                with(jmp_parlor_to_living)
                    tmp_id = self;
            }
            break;
        case "kitchen":
            if (ds_map_find_value(map,"next_room") == "hallway"){
                with(jmp_kitchen_to_hallway)
                    tmp_id = self;
            }else if (ds_map_find_value(map,"next_room") == "entry"){
                with(jmp_kitchen_to_entry)
                    tmp_id = self;
            }else{
                with(jmp_kitchen_to_parlor)
                    tmp_id = self;
            }
            break;
        case "hallway":
            if (ds_map_find_value(map,"next_room") == "dining"){
                with(jmp_hallway_to_dining)
                    tmp_id = self;
            }else{
                with(jmp_hallway_to_kitchen)
                    tmp_id = self;
            }
            break;
        case "dining":
            if (ds_map_find_value(map,"next_room") == "hallway"){
                with(jmp_dining_to_hallway)
                    tmp_id = self;
            }else{
                with(jmp_dining_to_entry)
                    tmp_id = self;
            }
            break;
        }
        //goal_x = tmp_id.x;
        //goal_y = tmp_id.y;
    }
    path_start(path,0.5,"",1);
    path_position = path_pos;
    set_loc = false;
    //path_end();
}else{
    grid = mp_grid_create(0,0,room_width/8, room_height/8,8,8);
    path=path_add();
    mp_grid_add_instances(grid,obj_npc_wall,1);
    mp_grid_path(grid,path,x,y,goal_x,goal_y,1);
    path_start(path,1.5,"",1);

    if (hspeed &gt; 0) facing = 1;
    if (hspeed &lt; 0) facing = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(ds_map_find_value(map,"spt_idle"),image_index,x,y,facing,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,40</point>
    <point>20,20</point>
  </PhysicsShapePoints>
</object>
